@mixin sp {
  @media (max-width: ($breakpoint_sp)) {
    @content;
  }
}
@mixin pc {
  @media (min-width: ($breakpoint_pc)) {
    @content;
  }
}
@mixin iphoneSE{
  @media (max-width: 374px) {
    @content;
  }
}
@mixin size($w, $h) {
  width: $w;
  height: $h;
}
@mixin square($s) {
  @include size($s, $s);
}

@mixin absolute-centering($horizontal: true, $vertical: true) {
	position: absolute;
	@if $horizontal and $vertical {
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	} @else if $horizontal {
		left: 50%;
		transform: translate(-50%, 0);
	} @else if $vertical {
		top: 50%;
		transform: translate(0, -50%);
	}
}

@mixin text-truncate {
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
}

@mixin responsive-iframe($ratio:56.25%){
  position: relative;
  width: 100%;
  padding-top: $ratio;
  & iframe{
    position: absolute;
    top: 0;
    right: 0;
    width: 100% !important;
    height: 100% !important;
  }
}
@mixin gradientBg($direction,$color1,$color2,$additional:''){
  background:unquote($additional) linear-gradient(to $direction, $color1 0%,$color2 100%);
}
/*
  This mixin can be used to set the object-fit:
  @include object-fit(contain);

  or object-fit and object-position:
  @include object-fit(cover, top);
*/
@mixin object-fit($fit: fill, $position: null) {
  -o-object-fit: $fit;
  object-fit: $fit;
  @if $position {
    -o-object-position: $position;
    object-position: $position;
    font-family: 'object-fit: #{$fit}; object-position: #{$position}';
  } @else {
    font-family: 'object-fit: #{$fit}';
  }
}